name: microservices-swarm

services:
<<<<<<< Updated upstream
  auth:
    container_name: auth
=======
  ms-user-management:
    container_name: ms-user-management
>>>>>>> Stashed changes
    depends_on:
      - ms-rabbitmq
      - ms-postgres
    build:
      context: .
      dockerfile: ./apps/auth/Dockerfile.dev
    command: pnpm start:debug auth
    env_file:
<<<<<<< Updated upstream
      - ./apps/auth/.env
=======
      - ./apps/user-management/.env
    environment:
      RABBIT_MQ_URL: "amqp://admin:password@ms-rabbitmq/"
      DB_CONNECTION_STRING: "postgresql://postgres:password@ms-postgres/database"
>>>>>>> Stashed changes
    volumes:
      - ./libs:/app/libs
      - ./apps/auth:/app/apps/auth
    ports:
      - 9230:9229
    networks:
      - ms-services-net

  ms-orchestrator:
    container_name: ms-orchestrator
    depends_on:
      - ms-rabbitmq
      - ms-postgres
    build:
      context: .
      dockerfile: ./apps/orchestrator/Dockerfile.dev
    command: pnpm start:debug orchestrator
    env_file:
      - ./apps/orchestrator/.env
    environment:
      RABBIT_MQ_URL: "amqp://admin:password@ms-rabbitmq/"
      DB_CONNECTION_STRING: "postgresql://postgres:password@ms-postgres/database"
    volumes:
      - ./libs:/app/libs
      - ./apps/orchestrator:/app/apps/orchestrator
    ports:
      - 9231:9229
    networks:
      - ms-services-net
  
  ms-email-int:
    container_name: ms-email-int
    depends_on:
      - ms-rabbitmq
      - ms-postgres
    build:
      context: .
      dockerfile: ./apps/email-int/Dockerfile.dev
    command: pnpm start:debug email-int
    env_file:
      - ./apps/email-int/.env
    environment:
      RABBIT_MQ_URL: "amqp://admin:password@ms-rabbitmq/"
      DB_CONNECTION_STRING: "postgresql://postgres:password@ms-postgres/database"
    volumes:
      - ./apps/email-int:/app/apps/email-int
      - ./libs:/app/libs
    ports:
      - 9232:9229
    networks:
      - ms-services-net
  
  ms-crm-int:
    container_name: ms-crm-int
    depends_on:
      - ms-rabbitmq
      - ms-postgres
    build:
      context: .
      dockerfile: ./apps/crm-int/Dockerfile.dev
    command: pnpm start:debug crm-int
    env_file:
      - ./apps/crm-int/.env
    environment:
      RABBIT_MQ_URL: "amqp://admin:password@ms-rabbitmq/"
      DB_CONNECTION_STRING: "postgresql://postgres:password@ms-postgres/database"
    volumes:
      - ./apps/crm-int:/app/apps/crm-int
      - ./libs:/app/libs
    ports:
      - 9233:9229
    networks:
      - ms-services-net
  
  ms-feedback:
    container_name: ms-feedback
    depends_on:
      - ms-rabbitmq
      - ms-postgres
    build:
      context: .
      dockerfile: ./apps/feedback/Dockerfile.dev
    env_file:
      - ./apps/feedback/.env
    environment:
      RABBIT_MQ_URL: "amqp://admin:password@ms-rabbitmq/"
      DB_CONNECTION_STRING: "postgresql://postgres:password@ms-postgres/database"
    volumes:
      - ./apps/feedback:/app/apps/feedback
      - ./libs:/app/libs
    ports:
      - 9234:9229
    networks:
      - ms-services-net
  
  ms-payment:
    container_name: ms-payment
    depends_on:
      - ms-rabbitmq
      - ms-postgres
    build:
      context: .
      dockerfile: ./apps/payment/Dockerfile.dev
    env_file:
      - ./apps/payment/.env
    environment:
      RABBIT_MQ_URL: "amqp://admin:password@ms-rabbitmq/"
      DB_CONNECTION_STRING: "postgresql://postgres:password@ms-postgres/database"
    volumes:
      - ./apps/payment:/app/apps/payment
      - ./libs:/app/libs
    ports:
      - 9235:9229
    networks:
      - ms-services-net
  